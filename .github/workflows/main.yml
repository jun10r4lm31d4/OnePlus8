name: Build with KernelSU

on:
  workflow_dispatch:

jobs:
  build:
    name: Build Kernel
    runs-on: ubuntu-20.04
    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update -y 
        sudo apt-get install binutils binutils-aarch64-linux-gnu binutils-arm-linux-gnueabi git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 lib32ncurses5-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip device-tree-compiler python3

    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: 'true'
        fetch-depth: 100

    - name: GetTime
      id: get_time
      run: |
        echo "TIME=$(TZ=UTC-8 date +%m%d%H%M )" >> $GITHUB_OUTPUT

    - name: Download dependencies
      run: |
        git clone https://github.com/xiangfeidexiaohuo/Snapdragon-LLVM --depth=1 sdclang

    - name: Build with KernelSU
      run: |
        curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s v0.9.5
        export PATH=$(pwd)/sdclang/bin/:$PATH
        make -j$(nproc --all) ARCH=arm64 CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- CC=clang O=out elementalx_defconfig
        make -j$(nproc --all) ARCH=arm64 CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- CC=clang O=out

    - name: Upload All Output
      uses: actions/upload-artifact@v4
      with:
        name: Output-${{ steps.get_time.outputs.TIME }}
        path: out/arch/arm64
